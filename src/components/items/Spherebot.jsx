/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 .\public\models\robots\sphere_robot\sphere_robot.glb -K -k 
*/

import React, { useRef, useState } from 'react'
import { useFrame } from "@react-three/fiber";
import { useGLTF, } from '@react-three/drei'
import { motion } from "framer-motion-3d";
import { Words } from "../Words";
import { useEffect } from "react";

export function Spherebot(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('models/robots/sphere_robot/sphere_robot.glb');
  let { section, timeWait } = props;

  const [ validSkill, setValidSkill ] = useState(false);
  
  useEffect(() => {
    if (section === 1) {
      setTimeout(() => {
        setValidSkill(true);
      }, timeWait)
    } else {
        setValidSkill(false);
    }
  })

  useFrame((state) => {
    if (section !== 1) {
      setValidSkill(false);
    }
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <motion.group
        animate={{
          y: [0, 2, 0, -1.7, 0],
          rotateY: [0, 0, 0, 0.8, 0],
          transition: {
            duration: 5,
            repeat: Infinity,
          }
        }}
      >
        <Words text={"Magento"} color={validSkill ? '#22bb1d' : '#ff0040'} size={0.275} rotateY={0.5} AxX={1} AxY={1} AxZ={0.5} />
        <Words text={"React / Fiber / THREE"} color={validSkill ? '#22bb1d' : '#ff0040'} size={0.275} AxX={-2} rotateY={0.7} AxY={-2} />
        <group name="Scene">
          <group name="sphere_body" rotation={[-Math.PI / 2, 0, 0]}>
            <group name="sphere_body_thruster_light_0">
              <mesh name="sphere_body_thruster_light_0_1" geometry={nodes.sphere_body_thruster_light_0_1.geometry} material={materials.thruster_light} />
              <mesh name="sphere_body_thruster_light_0_2" geometry={nodes.sphere_body_thruster_light_0_2.geometry} material={materials.glossy_paint_white} />
              <mesh name="sphere_body_thruster_light_0_3" geometry={nodes.sphere_body_thruster_light_0_3.geometry} material={materials.black_matte} />
              <mesh name="sphere_body_thruster_light_0_4" geometry={nodes.sphere_body_thruster_light_0_4.geometry} material={materials.metal} />
              <mesh name="sphere_body_thruster_light_0_5" geometry={nodes.sphere_body_thruster_light_0_5.geometry} material={materials.eyes_light} />
              <mesh name="sphere_body_thruster_light_0_6" geometry={nodes.sphere_body_thruster_light_0_6.geometry} material={materials.dark_glass} />
              <mesh name="sphere_body_thruster_light_0_7" geometry={nodes.sphere_body_thruster_light_0_7.geometry} material={materials.black_matter_blender} />
              <mesh name="sphere_body_thruster_light_0_8" geometry={nodes.sphere_body_thruster_light_0_8.geometry} material={materials.blender_glass} />
            </group>
          </group>
        </group>
      </motion.group>
    </group>
  )
}

useGLTF.preload('models/robots/sphere_robot/sphere_robot.glb')
